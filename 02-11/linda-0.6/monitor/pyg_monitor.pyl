code :
	tokens = (
		'COLON',
		'STRING','NUMBER',
		'QUIT', 'LIST', 'INSPECT', 'WATCH', 'HELP'
	)

	lineno = 1

	class Tok :
		def __init__(self, l, type) :
			self.type = type
			self.lineno = lineno
			self.value = l.value
		def __str__(self) :
			return "Tok(%s,%r,%d)" % (self.type, self.value, self.lineno)

definitions :
	STRING	"[[:alpha:]_][[:alnum:]_]*"
	NUMBER	"[0123456789]+"
        
INITIAL :
	":": return "COLON"
	"quit":	return "QUIT" # Tok(self, "QUIT")
	"list":	return "LIST"
	"inspect":	return "INSPECT"
        "route":	return "ROUTE"
	"watch":	return "WATCH"
	"help":	return "HELP"
	"{NUMBER}":
		try :
			self.value = int(self.value)
		except ValueError :
			print "Integer value too large", self.value
			self.value = 0
		return "NUMBER"
	"[[:blank:]]": return
	"\n+":
		global lineno
		lineno += len(self.value)
		return

	"." :
		print "Illegal character '%s'" % self.value
		return
